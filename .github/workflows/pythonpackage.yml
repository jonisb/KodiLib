# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [2.7, 3.8]
        architecture: ['x64', 'x86']

    env:
      TEMP: ${env:TEMP}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache # This path is specific to Windows
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.architecture }}-
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Cache Kodi15_32bit
      uses: actions/cache@v2
      with:
        path: |
          ${env:TEMP}\jsbc.cache\kodi-15.2-Isengard.exe
        key: ${{ runner.os }}-cache-kodi-15.2-Isengard
    - name: Cache Kodi16_32bit
      uses: actions/cache@v2
      with:
        path: |
          ${env.TEMP}\jsbc.cache\kodi-16.1-Jarvis.exe
        key: ${{ runner.os }}-cache-kodi-16.1-Jarvis
    - name: Cache Kodi17.6_32bit
      uses: actions/cache@v2
      with:
        path: |
          ${env:TEMP}\jsbc.cache\kodi-17.6-Krypton-x86.exe
        key: ${{ runner.os }}-cache-kodi-17.6-Krypton-x86
    - name: Cache Kodi18.9_32bit
      uses: actions/cache@v2
      with:
        path: |
          ${{env.TEMP}}\jsbc.cache\kodi-18.9-Leia-x86.exe
        key: ${{ runner.os }}-cache-kodi-18.9-Leia-x86
    - name: Cache Kodi18.9_64bit
      uses: actions/cache@v2
      with:
        path: |
          ${ env:TEMP }\jsbc.cache\kodi-18.9-Leia-x64.exe
        key: ${{ runner.os }}-cache-kodi-18.9-Leia-x64
    - name: Cache Kodi19.0_32bit
      uses: actions/cache@v2
      with:
        path: |
          ${env:TEMP}\jsbc.cache\kodi-19.0-Matrix-x86.exe
        key: ${{ runner.os }}-cache-kodi-19.0-Matrix-x86
    - name: Cache Kodi19.0_64bit
      uses: actions/cache@v2
      with:
        path: |
          ${env:TEMP}\jsbc.cache\kodi-19.0-Matrix-x64.exe
        key: ${{ runner.os }}-cache-kodi-19.0-Matrix-x64
    - name: Install dependencies
      run: |
        pip install wheel
        python -m pip install --no-python-version-warning --upgrade pip
        pip install --no-python-version-warning -r requirements.txt
        pip install git+https://github.com/jonisb/jsbc.compat.git#egg=jsbc.compat
        pip install git+https://github.com/jonisb/Toolbox.git#egg=jsbc.Toolbox
        pip install git+https://github.com/jonisb/jsbc.network.git#egg=jsbc.network
        pip install --upgrade .\
    - name: Lint with flake8
      run: |
        pip install --no-python-version-warning flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install --no-python-version-warning pytest
        python -m pytest
